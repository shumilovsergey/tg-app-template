# ==============================================================================
# REQUIRED CONFIGURATION - NO DEFAULTS PROVIDED
# You MUST configure all these values or the application will not start
# ==============================================================================

# Project Configuration (REQUIRED)
PROJECT_NAME=CHANGE-ME-your-project-name
# Example: myapp, telegram-shop, crypto-bot (no spaces, lowercase, dashes ok)

# Flask Configuration (REQUIRED)
FLASK_PORT=CHANGE-ME-SET-YOUR-PORT
# Example: 5001, 5002, 8080 (choose unique port to avoid conflicts)

FLASK_DEBUG=False
SECRET_KEY=CHANGE-ME-GENERATE-SECURE-SECRET-KEY
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"

# Telegram Bot Configuration (REQUIRED)
BOT_TOKEN=CHANGE-ME-GET-FROM-BOTFATHER
# Get from https://t.me/BotFather

# URL Configuration (REQUIRED)
FRONTEND_URL=CHANGE-ME-YOUR-FRONTEND-URL
# Example: https://yourusername.github.io/your-repo

BACKEND_URL=CHANGE-ME-YOUR-BACKEND-DOMAIN
# Example: https://api.yourdomain.com, https://yourapp.fly.dev

# CORS Configuration Removed - All origins are allowed
# Telegram cryptographic validation provides security instead of CORS

# ==============================================================================
# AUTO-GENERATED CONFIGURATION
# These are automatically generated from the values above:
# - Container names: ${PROJECT_NAME}-flask, ${PROJECT_NAME}-redis
# - Networks: ${PROJECT_NAME}-private-network, ${PROJECT_NAME}-public-network
# - Volume name: ${PROJECT_NAME}-redis-data
# - Webhook URL: ${BACKEND_URL}/api/webhook
# - Redis port: 6379 (hardcoded, isolated in container)
# ==============================================================================

# ==============================================================================
# OPTIONAL CONFIGURATION
# ==============================================================================

# Personal Website (Optional)
SHUMILOV_WEBSITE=https://sh-development.ru

# Additional Docker Configuration
PYTHONUNBUFFERED=1

# ==============================================================================
# DEVELOPMENT USER BYPASS (OPTIONAL)
# ==============================================================================

# Development Mode - allows bypassing Telegram auth for local development
ENABLE_DEV_USER=false
# Set to 'true' to enable dev user bypass (ONLY for development/testing)

# Dev User Configuration (used when ENABLE_DEV_USER=true)
DEV_USER_ID=999999999
DEV_USER_FIRST_NAME=Dev User
DEV_USER_LAST_NAME=Template
DEV_USER_USERNAME=dev_user
DEV_USER_LANGUAGE=en

# Dev User Auth Header - use this header value instead of Telegram auth
DEV_AUTH_HEADER=dev-user-bypass
# Frontend sends: X-Dev-Auth: dev-user-bypass